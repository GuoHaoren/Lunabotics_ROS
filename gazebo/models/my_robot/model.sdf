<?xml version='1.0'?>
<sdf version='1.3'>
  <model name="my_robot">
    <link name='chassis'>
      <pose>0 0 0.020 0 0 0</pose>
      <inertial>
        <mass>3.7</mass>
        <pose>0 0 0.00761 0 0 0</pose>
        <inertia>
          <ixx>1.0</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>1.0</iyy>
          <iyz>0.0</iyz>
          <izz>1.0</izz>
        </inertia>
      </inertial>

      <collision name='collision'>
        <geometry>
          <cylinder>
            <radius>.144</radius>
            <length>.030</length>
          </cylinder>
        </geometry>
      </collision>

      <visual name='visual'>
        <geometry>
          <cylinder>
            <radius>.144</radius>
            <length>.030</length>
          </cylinder>
<!--
          <mesh>
            <uri>model://pioneer2dx/meshes/chassis.dae</uri>
            <scale>0.9 0.5 0.5</scale>
          </mesh>
-->
<!--
          <box>
            <size>.4 .2 .1</size>
          </box>
-->
        </geometry>
      </visual>

      <collision name='caster_collision'>
        <pose>0.12 0 -0.012 1.5707 0 0</pose>
        <geometry>
          <sphere>
            <radius>.008</radius>
          </sphere>
        </geometry>

        <surface>
          <friction>
            <ode>
              <mu>0</mu>
              <mu2>0</mu2>
              <slip1>1.0</slip1>
              <slip2>1.0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>

      <visual name='caster_visual'>
        <pose>0.12 0 -0.012 1.5707 0 0</pose>
        <geometry>
          <sphere>
            <radius>.008</radius>
          </sphere>
        </geometry>
      </visual>
    </link>

    <link name="left_wheel">
      <pose>-0.08 0.1 0.01 0 1.5707 1.5707</pose>
      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>.01</radius>
            <length>.005</length>
          </cylinder>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <cylinder>
            <radius>.01</radius>
            <length>.005</length>
          </cylinder>
        </geometry>
      </visual>
    </link>

    <link name="right_wheel">
      <pose>-0.08 -0.1 0.01 0 1.5707 1.5707</pose>
      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>.01</radius>
            <length>.005</length>
          </cylinder>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <cylinder>
            <radius>.01</radius>
            <length>.005</length>
          </cylinder>
        </geometry>
      </visual>
    </link>

    <joint type="revolute" name="left_wheel_hinge">
      <pose>0 0 0 0 0 0</pose>
      <child>left_wheel</child>
      <parent>chassis</parent>
      <axis>
        <xyz>0 -1 0</xyz>
      </axis>
    </joint>

    <joint type="revolute" name="right_wheel_hinge">
      <pose>0 0 0 0 0 0</pose>
      <child>right_wheel</child>
      <parent>chassis</parent>
      <axis>
        <xyz>0 -1 0</xyz>
      </axis>
    </joint>

    <link name="kinect_link">
      <pose>-0.0315 0 0.06 0 0 3.140</pose>
      <collision name="collision">
        <geometry>
          <box>
            <size>0.07271 0.27794 0.073</size>
          </box>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <box>
            <size>0.07271 0.27794 0.073</size>
          </box>
        </geometry>
      </visual>

      <sensor name="kinect_sensor" type="depth">
        <update_rate>20</update_rate>
        <camera>
          <horizontal_fov>1.04719755</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.05</near>
            <far>3</far>
          </clip>
        </camera>
      <!--  <plugin name="kinect_camera_controller" filename="libgazebo_ros_openni_kinect.so">
          <cameraName>kinect</cameraName>
          <alwaysOn>true</alwaysOn>
          <updateRate>20</updateRate>
          <imageTopicName>/camera/image_raw</imageTopicName>
          <pointCloudTopicName>/camera/depth/points</pointCloudTopicName>
          <cameraInfoTopicName>/camera/camera_info</cameraInfoTopicName>
          <frameName>camera_depth_optical_frame</frameName>
          <CxPrime>0.0</CxPrime>
          <Cx>0.0</Cx>
          <Cy>0.0</Cy>
          <focalLength>0.0</focalLength>
          <hackBaseline>0.0</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin> -->
      </sensor>
    </link>

    <joint name="kinect_joint" type="revolute">
      <child>kinect_link</child>
      <parent>chassis</parent>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <upper>0</upper>
          <lower>0</lower>
        </limit>
      </axis>
    </joint>

<!--
    <include>
      <uri>model://hokuyo</uri>
      <pose>-0.1 0 0.05 0 0 3.14159</pose>
    </include>
    <joint name="hokuyo_joint" type="revolute">
      <child>hokuyo::link</child>
      <parent>chassis</parent>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <upper>0</upper>
          <lower>0</lower>
        </limit>
      </axis>
    </joint>
-->
<!--
    <include>
      <uri>model://stereo_camera</uri>
      <pose>0.2 0 0.2 0 0 0</pose>
    </include>
    <joint name="camera_joint" type="revolute">
      <child>stereocamera::link</child>
      <parent>chassis</parent>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <upper>0</upper>
          <lower>0</lower>
        </limit>
      </axis>
    </joint>
-->
    <plugin name="diff_drive" filename="libLunaDiffDrivePlugin.so">
      <left_wheel_hinge>left_wheel_hinge</left_wheel_hinge>
      <right_wheel_hinge>right_wheel_hinge</right_wheel_hinge>
      <torque>5</torque>
    </plugin>
<!--
    <plugin name="ros_based_plugin_for_laser" filename="libros_laser_sensor.so">
      <gain>5.0</gain>
      <ray_sensor>laser</ray_sensor>
    </plugin>
-->
<!--
    <plugin name="quadrotor_groundtruth_sim" filename="libgazebo_ros_p3d.so">
      <updateRate>100.0</updateRate>
      <bodyName>chassis</bodyName>
      <topicName>ground_truth/roomba</topicName>
      <gaussianNoise>0.0</gaussianNoise>
      <frameName>map</frameName>
    </plugin>-->
  </model>
</sdf>

